# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      
      - name: Update DNS
        env:
          CLOUDFLARE_API_TOKEN: HsoabgfSbNQVeHpg30hI14GOo8mZLixzk_7HhJY8  
        #${secrets.CLOUDFLARE_API_TOKEN}
        run: |
          curl -X PUT "https://api.cloudflare.com/client/v4/user/tokens/verify" \
          -H "Authorization: Bearer HsoabgfSbNQVeHpg30hI14GOo8mZLixzk_7HhJY8" \
          -H "Content-Type:application/json"
          -d '{"type":"CNAME","name":"Karazo.com","content":"https://us32shahid.github.io/Test-GHA-repo/","ttl":1,"priority":10,"proxied":false}'
